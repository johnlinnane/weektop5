{
  // Source: https://groups.google.com/forum/#!topic/eslint/ttZUG3v7vn0
  // Plugins are a set of rules distributed as NPM package. Configs are pre-defined configuration of
  // rules (either default or plugin based). Those two don’t have much in common. Plugins can include
  // shareable configs, however configs can’t include plugin rules. So, in short, plugins contain
  // definitions for custom rules, and configs explain whether those rules should be enabled or disabled
  // and how they should be configured.

  // See also: https://indepth.dev/setting-up-efficient-workflows-with-eslint-prettier-and-typescript/
  // See also: https://stackoverflow.com/questions/53189200/whats-the-difference-between-plugins-and-extends-in-eslint#54522973
  // See also: https://eslint.org/docs/user-guide/configuring#extending-configuration-files
  // See also: https://eslint.org/docs/user-guide/configuring#configuring-plugins
  // See also: https://github.com/typescript-eslint/typescript-eslint#can-i-use-all-of-the-existing-eslint-plugins-and-rules-without-any-changes
  // See also: https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin#supported-rules
  // See also: eslint(https://github.com/eslint/eslint/blob/master/packages/eslint-config-eslint/default.yml):recommended(https://github.com/eslint/eslint/blob/master/conf/eslint-recommended.js)
  // See also: https://gitter.im/eslint/eslint

  "extends": [
    "airbnb-typescript/base", // eslint-config-airbnb-typescript
    "plugin:@typescript-eslint/recommended", // @typescript-eslint/eslint-plugin
    "plugin:eslint-comments/recommended", // eslint-plugin-eslint-comments
    "plugin:promise/recommended", // eslint-plugin-promise
    "plugin:unicorn/recommended", // eslint-plugin-unicorn
    "plugin:prettier/recommended", // eslint-plugin-prettier
    "prettier" // eslint-config-prettier
  ],
  "plugins": [
    "@typescript-eslint", // @typescript-eslint/eslint-plugin
    "eslint-comments", // eslint-plugin-eslint-comments
    "promise", // eslint-plugin-promise
    "unicorn", // eslint-plugin-unicorn
    "prettier" // eslint-plugin-prettier
  ],
  "parserOptions": {
    "project": "./weektop5/tsconfig.json",
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "env": {
    "es6": true,
    "browser": true,
    "node": true,
    "jasmine": true
  },
  "rules": {
    "no-debugger": "off",
    "no-underscore-dangle": "off",
    "no-param-reassign": "off",
    "no-console": "off",
    "no-shadow": "off",
    "lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ],
    "no-restricted-syntax": 0,
    "class-methods-use-this": "off",
    "no-prototype-builtins": "off",
    "unicorn/prevent-abbreviations": "off",
    "unicorn/no-null": "off",
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    "import/no-default-export": "error",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-unused-expressions": "off",
    "@typescript-eslint/no-explicit-an": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true,
        "variables": true,
        "typedefs": true
      }
    ],
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true
      }
    ]
  }
}
